// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thermon.Computrace.Web.Infrastructure.Data;

namespace Thermon.Computrace.Web.Infrastructure.Migrations
{
    [DbContext(typeof(ComputraceContext))]
    partial class ComputraceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Circuits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Circuits");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Comments", b =>
                {
                    b.Property<Guid>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.ConnectionInfo", b =>
                {
                    b.Property<Guid>("ConnectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConnectionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Default")
                        .HasColumnType("bit");

                    b.Property<bool>("MyProjects")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ConnectionId");

                    b.ToTable("ConnectionInfo");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Items", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatalogNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Parts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SegmentsId")
                        .HasColumnType("int");

                    b.Property<string>("ShorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Units")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SegmentsId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Profiles", b =>
                {
                    b.Property<Guid>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfileId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Project", b =>
                {
                    b.Property<long>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CircuitLastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComputraceVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatabaseConnectionString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatabaseLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatabaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatabaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatabaseVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalCircuits")
                        .HasColumnType("int");

                    b.Property<int>("TotalDesignedCircuits")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Properties", b =>
                {
                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("AluminumType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ByCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ByLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CautionLabelInternal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CircumFixingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultTermAllowance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElectricalCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Imperial")
                        .HasColumnType("bit");

                    b.Property<bool>("InsulationUnitsImperial")
                        .HasColumnType("bit");

                    b.Property<string>("JobNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxSpiralRadio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OtherTypes")
                        .HasColumnType("bit");

                    b.Property<string>("POAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pipe")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperatureUnits")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Segments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CircuitsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CircuitsId");

                    b.ToTable("Segments");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Items", b =>
                {
                    b.HasOne("Thermon.Computrace.Web.Core.Entities.Segments", null)
                        .WithMany("Items")
                        .HasForeignKey("SegmentsId");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Properties", b =>
                {
                    b.HasOne("Thermon.Computrace.Web.Core.Entities.Project", null)
                        .WithOne("Properties")
                        .HasForeignKey("Thermon.Computrace.Web.Core.Entities.Properties", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Segments", b =>
                {
                    b.HasOne("Thermon.Computrace.Web.Core.Entities.Circuits", null)
                        .WithMany("Segments")
                        .HasForeignKey("CircuitsId");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Circuits", b =>
                {
                    b.Navigation("Segments");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Project", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Thermon.Computrace.Web.Core.Entities.Segments", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
